buildscript {
    dependencies {
        classpath("gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:1.0.10")
    }
}

plugins {
    id 'org.springframework.boot' version '2.6.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

apply plugin: 'io.spring.dependency-management'

group = 'com.jungwoo'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}


repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    compileOnly 'org.projectlombok:lombok'

    //security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'

    //email
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    //image
    implementation 'com.github.downgoon:marvin:1.5.5'
    implementation 'com.github.downgoon:MarvinPlugins:1.5.5'


    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

    annotationProcessor 'org.projectlombok:lombok'

    //test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'junit:junit:4.13.1'

    //DB
    compileOnly 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'com.h2database:h2'


    // Querydsl
    apply plugin: 'com.ewerk.gradle.plugins.querydsl'

    implementation 'com.querydsl:querydsl-jpa'
    implementation 'com.querydsl:querydsl-apt'
    compile 'com.querydsl:querydsl-mongodb'


}

tasks.named('test') {
    useJUnitPlatform()
}


def querydslDir = "$buildDir/generated/mariaQuerydsl"
def mongoQuerydslDir = "$buildDir/generated/mongoQuerydsl/"

def test1 = "$buildDir/generated/mariaQuerydsl"

//querydsl 설정을 추가. JPA사용여부와 사용할 경로
querydsl {
    library = "com.querydsl:querydsl-apt"
    jpa = true
    springDataMongo = true
    querydslSourcesDir = querydslDir
}

//빌드시 사용할 sourceSet을 추가
sourceSets {
    main{
        java{
            srcDirs = ['src/main/java', querydslDir]
        }
    }
}

//querydsl이 compileClassPath를 상속하도록 설정
compileQuerydsl{
    if(file(querydslDir).exists()){
        delete(file(querydslDir))
    }
    options.annotationProcessorPath = configurations.querydsl
}

//querydsl 컴파일시 사용할 옵션 설정
configurations {
    querydsl.extendsFrom compileClasspath
}
